const {
  http
} = require('../http.js')
const fs = require('fs')
const {
  writeLine
} = require('../utils/fswrite.js')
const moment = require('moment')

let START_TIME = '2021-03-01 00:00:00'
let END_TIME = '2021-03-31 00:00:00'
// console.log(moment(START_TIME).valueOf())
// 某一阶段15分钟蜡烛图
// let Candles15 = JSON.parse(fs.readFileSync('2021-03-01 00:00:00-2021-03-31 00:00:00-1.txt', 'utf-8'))
// console.log(Candles15.length);


// 获取1分钟历史蜡烛图
async function getCoinCandles(start, end, coin, gap) {
  let startTime = new Date(start).getTime()
  let endTime = new Date(end).getTime()
  let limit = (endTime - startTime) / (gap * 60 * 1000)
  let write
  // 如果大于5000，那么分次请求
  if (limit > 5000) {
    let times = Math.ceil(limit / 5000)
    let reqArr = []
    for (let i = 1; i <= times; i++) {
      // 每一次的开始时间是上一次的结束时间，记得加1000，防止重复
      let lastStartTime = ((reqArr[i - 2] && reqArr[i - 2].end_time) + 1000) || startTime
      let time;
      // 每次请求的数据条数
      if (i < times) {
        time = 5000
      } else {
        time = limit - (5000 * (i - 1))
      }
      reqArr.push({
        start_time: lastStartTime,
        end_time: lastStartTime + time * gap * 60 * 1000
      })
      let res = await http.get(`https://ftx.com/api/markets/${coin}/candles?resolution=${gap * 60}&start_time=${lastStartTime / 1000}&end_time=${ (lastStartTime + time * gap * 60 * 1000) / 1000 }&limit=${time}`)
      console.log(`第${i}次请求成功，总共${times}次`);
      write = JSON.stringify(res.data.result)
      if (i == 1 && times > 1) {
        // 如果是第一次，并且还有第二次，那么将数组末尾的 ']' 替换为 ','
        write = write.replace(']', ',')
      } else if (i > 1 && i < times) {
        // 如果是中间次数，那么把开头的'['去掉，末尾的']'换成','
        write = write.replace('[', '')
        write = write.replace(']', ',')
      } else if (i == times) {
        // 如果是最后一次，只需要将开头的'['去掉
        write = write.replace('[', '')
      }
      await writeLine(`${coin}-${start}-${end}-${gap}.txt`, write)
    }
  } else {
    let res = await http.get(`https://ftx.com/api/markets/${coin}/candles?resolution=${gap * 60}&start_time=${startTime / 1000}&end_time=${ endTime / 1000 }&limit=${limit}`)
    write = JSON.stringify(res.data.result)
    await writeLine(`${coin}-${start}-${end}-${gap}.txt`, write)
  }
}
async function getCandles(start, end, coin, gap) {
  await getCoinCandles(start, end, coin, 1)
  await getCoinCandles(start, end, coin, gap)
}
exports.getCandles = getCandles